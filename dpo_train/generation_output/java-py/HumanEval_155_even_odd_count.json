{
    "name": "HumanEval_155_even_odd_count",
    "language": "py",
    "prompt": "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int, int]:\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_155_even_odd_count.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n",
    "stop_tokens": [
        "\ndef",
        "\n#",
        "\nif",
        "\nclass"
    ],
    "translation_prompt": "### Java version\n\nimport java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    public static Pair<Long, Long> evenOddCount(long num) {\n        long evenCount = 0;\n        long oddCount = 0;\n        for (char i : Long.toString(Math.abs(num)).toCharArray()) {\n            if (i % 2 == 0) {\n                evenCount++;\n            } else {\n                oddCount++;\n            }\n        }\n        return Pair.with(evenCount, oddCount);\n    }\n}\n\n### Python version\n\nfrom typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int, int]:\n"
}
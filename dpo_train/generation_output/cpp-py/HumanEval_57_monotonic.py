### C++ version

#include<assert.h>
#include<bits/stdc++.h>
#include<vector>
#include<sstream>
#include<regex>
#include<map>
#include<set>
#include<unordered_map>
#include<unordered_set>
bool monotonic(std::vector<long> l) {
    return std::is_sorted(l.begin(), l.end()) || std::is_sorted(l.rbegin(), l.rend());
}

### Python version

from typing import List

def monotonic(l: List[int]) -> bool:
    return monotonic(l)

### C++ version

#include<iostream>
#include<vector>
#include<unordered_map>
#include<unordered_set>
#include<map>
#include<set>
#include<string>
#include<sstream>
#include<regex>
#include<algorithm>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include<iterator>
#include
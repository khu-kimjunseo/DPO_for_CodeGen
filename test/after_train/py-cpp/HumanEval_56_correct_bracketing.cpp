#include<assert.h>
#include<bits/stdc++.h>
#include<vector>
#include<sstream>
#include<regex>
#include<map>
#include<set>
#include<unordered_map>
#include<unordered_set>
bool correct_bracketing(std::string brackets) {

}
int main() {
    auto candidate = correct_bracketing;
    assert(candidate(("<>")) == (true));
    assert(candidate(("<<><>>")) == (true));
    assert(candidate(("<><><<><>><>")) == (true));
    assert(candidate(("<><><<<><><>><>><<><><<>>>")) == (true));
    assert(candidate(("<<<><>>>>")) == (false));
    assert(candidate(("><<>")) == (false));
    assert(candidate(("<")) == (false));
    assert(candidate(("<<<<")) == (false));
    assert(candidate((">")) == (false));
    assert(candidate(("<<>")) == (false));
    assert(candidate(("<><><<><>><>><<>")) == (false));
    assert(candidate(("<><><<><>><>>><>")) == (false));
}

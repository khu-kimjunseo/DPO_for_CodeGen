#include<assert.h>
#include<bits/stdc++.h>
#include<vector>
#include<sstream>
#include<regex>
#include<map>
#include<set>
#include<unordered_map>
#include<unordered_set>
std::vector<std::string> separate_paren_groups(std::string paren_string) {

}
int main() {
    auto candidate = separate_paren_groups;
    assert(candidate(("(()()) ((())) () ((())()())")) == (std::vector<std::string>({(std::string)"(()())", (std::string)"((()))", (std::string)"()", (std::string)"((())()())"})));
    assert(candidate(("() (()) ((())) (((())))")) == (std::vector<std::string>({(std::string)"()", (std::string)"(())", (std::string)"((()))", (std::string)"(((())))"})));
    assert(candidate(("(()(())((())))")) == (std::vector<std::string>({(std::string)"(()(())((())))"})));
    assert(candidate(("( ) (( )) (( )( ))")) == (std::vector<std::string>({(std::string)"()", (std::string)"(())", (std::string)"(()())"})));
}
